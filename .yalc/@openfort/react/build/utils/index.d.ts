import React from 'react';
declare const truncateEthAddress: (address?: string, separator?: string) => string;
declare const truncateENSAddress: (ensName: string, maxLength: number) => string;
declare const truncateUserId: (playerId?: string, separator?: string) => string;
declare const nFormatter: (num: number, digits?: number) => string;
declare const detectBrowser: () => "" | import("detect-browser").Browser | "bot" | "node" | "react-native";
declare const detectOS: () => "" | import("detect-browser").OperatingSystem | NodeJS.Platform;
declare const isAndroid: () => boolean;
declare const isMobile: () => boolean;
type ReactChildArray = ReturnType<typeof React.Children.toArray>;
declare function flattenChildren(children: React.ReactNode): ReactChildArray;
export declare const isWalletConnectConnector: (connectorId?: string) => connectorId is "walletConnect";
export declare const isFamilyAccountsConnector: (connectorId?: string) => connectorId is "familyAccountsProvider";
export declare const isFamilyConnector: (connectorId?: string) => connectorId is "co.family.wallet";
export declare const isMetaMaskConnector: (connectorId?: string) => connectorId is "metaMaskSDK";
export declare const isCoinbaseWalletConnector: (connectorId?: string) => connectorId is "coinbaseWalletSDK";
export declare const isLedgerConnector: (connectorId?: string) => connectorId is "ledger";
export declare const isPortoConnector: (connectorId?: string) => connectorId is "xyz.ithaca.porto";
export declare const isSafeConnector: (connectorId?: string) => connectorId is "safe";
export declare const isInjectedConnector: (connectorId?: string) => connectorId is "injected";
export { nFormatter, truncateEthAddress, truncateENSAddress, truncateUserId, isMobile, isAndroid, detectBrowser, detectOS, flattenChildren, };
